//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sajt.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class restoranbazaEntities : DbContext
    {
        public restoranbazaEntities()
            : base("name=restoranbazaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<admin> admins { get; set; }
        public DbSet<korisnici> korisnicis { get; set; }
        public DbSet<menu> menus { get; set; }
        public DbSet<poll> polls { get; set; }
        public DbSet<rezervacija> rezervacijas { get; set; }
        public DbSet<slike> slikes { get; set; }
    
        public virtual int KorisnikDelete(Nullable<int> idkorisnik)
        {
            var idkorisnikParameter = idkorisnik.HasValue ?
                new ObjectParameter("idkorisnik", idkorisnik) :
                new ObjectParameter("idkorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KorisnikDelete", idkorisnikParameter);
        }
    
        public virtual int KorisnikInsert(string ime, string prezime, string mail)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KorisnikInsert", imeParameter, prezimeParameter, mailParameter);
        }
    
        public virtual int KorisnikUpdate(Nullable<int> idkorisnik, string ime, string prezime, string mail)
        {
            var idkorisnikParameter = idkorisnik.HasValue ?
                new ObjectParameter("idkorisnik", idkorisnik) :
                new ObjectParameter("idkorisnik", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KorisnikUpdate", idkorisnikParameter, imeParameter, prezimeParameter, mailParameter);
        }
    
        public virtual int MenuDelete(Nullable<int> idmenu)
        {
            var idmenuParameter = idmenu.HasValue ?
                new ObjectParameter("idmenu", idmenu) :
                new ObjectParameter("idmenu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MenuDelete", idmenuParameter);
        }
    
        public virtual int MenuInsert(string naziv, string opis, Nullable<int> cena)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MenuInsert", nazivParameter, opisParameter, cenaParameter);
        }
    
        public virtual int MenuUpdate(Nullable<int> idmenu, string naziv, string opis, Nullable<int> cena)
        {
            var idmenuParameter = idmenu.HasValue ?
                new ObjectParameter("idmenu", idmenu) :
                new ObjectParameter("idmenu", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MenuUpdate", idmenuParameter, nazivParameter, opisParameter, cenaParameter);
        }
    
        public virtual int PollDelete(Nullable<int> idpoll)
        {
            var idpollParameter = idpoll.HasValue ?
                new ObjectParameter("idpoll", idpoll) :
                new ObjectParameter("idpoll", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollDelete", idpollParameter);
        }
    
        public virtual int PollInsert(string naziv, Nullable<int> glasovi)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var glasoviParameter = glasovi.HasValue ?
                new ObjectParameter("glasovi", glasovi) :
                new ObjectParameter("glasovi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollInsert", nazivParameter, glasoviParameter);
        }
    
        public virtual int PollUpdate(Nullable<int> idpoll, string naziv, Nullable<int> glasovi)
        {
            var idpollParameter = idpoll.HasValue ?
                new ObjectParameter("idpoll", idpoll) :
                new ObjectParameter("idpoll", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var glasoviParameter = glasovi.HasValue ?
                new ObjectParameter("glasovi", glasovi) :
                new ObjectParameter("glasovi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollUpdate", idpollParameter, nazivParameter, glasoviParameter);
        }
    
        public virtual int PollUpdateVotes(Nullable<int> idpoll, string naziv, Nullable<int> glasovi)
        {
            var idpollParameter = idpoll.HasValue ?
                new ObjectParameter("idpoll", idpoll) :
                new ObjectParameter("idpoll", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var glasoviParameter = glasovi.HasValue ?
                new ObjectParameter("glasovi", glasovi) :
                new ObjectParameter("glasovi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollUpdateVotes", idpollParameter, nazivParameter, glasoviParameter);
        }
    
        public virtual int RezervacijaDelete(Nullable<int> idrez)
        {
            var idrezParameter = idrez.HasValue ?
                new ObjectParameter("idrez", idrez) :
                new ObjectParameter("idrez", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RezervacijaDelete", idrezParameter);
        }
    
        public virtual int RezervacijaInsert(string ime, string telefon, string datum, string vreme)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var datumParameter = datum != null ?
                new ObjectParameter("datum", datum) :
                new ObjectParameter("datum", typeof(string));
    
            var vremeParameter = vreme != null ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RezervacijaInsert", imeParameter, telefonParameter, datumParameter, vremeParameter);
        }
    
        public virtual int RezervacijaUpdate(Nullable<int> idrez, string ime, string telefon, string datum, string vreme)
        {
            var idrezParameter = idrez.HasValue ?
                new ObjectParameter("idrez", idrez) :
                new ObjectParameter("idrez", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var datumParameter = datum != null ?
                new ObjectParameter("datum", datum) :
                new ObjectParameter("datum", typeof(string));
    
            var vremeParameter = vreme != null ?
                new ObjectParameter("vreme", vreme) :
                new ObjectParameter("vreme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RezervacijaUpdate", idrezParameter, imeParameter, telefonParameter, datumParameter, vremeParameter);
        }
    
        public virtual int SlikaDelete(Nullable<int> idslika)
        {
            var idslikaParameter = idslika.HasValue ?
                new ObjectParameter("idslika", idslika) :
                new ObjectParameter("idslika", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SlikaDelete", idslikaParameter);
        }
    
        public virtual int SlikaInsert(string naziv, string putanja)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var putanjaParameter = putanja != null ?
                new ObjectParameter("putanja", putanja) :
                new ObjectParameter("putanja", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SlikaInsert", nazivParameter, putanjaParameter);
        }
    
        public virtual int SlikaUpdate(Nullable<int> idslika, string naziv, string putanja)
        {
            var idslikaParameter = idslika.HasValue ?
                new ObjectParameter("idslika", idslika) :
                new ObjectParameter("idslika", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var putanjaParameter = putanja != null ?
                new ObjectParameter("putanja", putanja) :
                new ObjectParameter("putanja", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SlikaUpdate", idslikaParameter, nazivParameter, putanjaParameter);
        }
    }
}
